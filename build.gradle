plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.2'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

ext {
	// Feign
	set('springCloudVersion', '2023.0.1')
	set('commonsLangVersion', '3.12.0')
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}


dependencies {

	// Email
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-mail'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'	//Swagger
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
//	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
	implementation 'de.codecentric:spring-boot-admin-starter-client:3.2.2'
	implementation 'org.projectlombok:lombok:1.18.34'

	// Spring Boot의 캐시 지원
	implementation 'org.springframework.boot:spring-boot-starter-cache'

	// CoolSMS
	implementation 'net.nurigo:sdk:4.3.0'

	// Firebase
	implementation 'com.google.firebase:firebase-admin:9.3.0'

	//Jwt
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	//flyway
//    implementation 'org.flywaydb:flyway-core:9.22.0'

	implementation 'commons-codec:commons-codec:1.5'
	implementation 'com.auth0:java-jwt:3.13.0'

	// CoolSMS
	implementation 'net.nurigo:sdk:4.3.0'

	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}